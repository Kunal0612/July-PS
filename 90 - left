//https://codeforces.com/problemset/problem/1421/E


#include <algorithm>
#include <cstdio>
#include <vector>
#include <limits>
#include <iostream>
#include <map>
#include <cassert>
#include <stdexcept>

void ToMax(long long &first, long long sec) {
    first = std::max(first, sec);
}


/*

Input :

A vector of integers nums.

Constraints :

nums : ranges from 1 to 200000.
nums.size() : ranges from -1000000000 to 1000000000.

*/


int SwedishHeroes(std::vector<int> nums){
    int len=nums.size();
    if (len < 1 || len > 200000) {
        throw std::invalid_argument("Invalid number of nums");
    }
    for(int i=0; i<len; i++){
        if (nums[i] < -1000000000 || nums[i] > 1000000000) {
            throw std::invalid_argument("Invalid log length");
        }
    }
    std::vector<int> arr(len + 1);
    std::vector<std::vector<std::vector<std::vector<long long>>>> dp_table(
        len + 1, 
        std::vector<std::vector<std::vector<long long>>>(
            3, 
            std::vector<std::vector<long long>>(3, std::vector<long long>(2, std::numeric_limits<long long>::min()))
        )
    );

    for (int i = 1; i <= len; ++i) {
        arr[i]=nums[i-1];
    }

    if (len == 1) {
        return arr[1];
    } 
    int sign[] = {1, -1};
    dp_table[0][0][2][0] = 0;

    for (int i = 1; i <= len; ++i) {
        for (int j = 0; j < 3; ++j) {
            for (int k = 0; k < 2; ++k) { 
                for (int l = 0; l < 2; ++l) {
                    for (int w = 0; w < 3; ++w) {
                        if (dp_table[i - 1][(j + !k + 1) % 3][w][l] != std::numeric_limits<long long>::min()) {
                            ToMax(dp_table[i][j][k][l || w == k], dp_table[i - 1][(j + !k + 1) % 3][w][l] + sign[k] * arr[i]);
                        }
                    }
                }
            }
        }
    }

    int ans=std::max(dp_table[len][1][0][1], dp_table[len][1][1][1]);
    return ans;
}


#include <algorithm>
#include <cstdio>
#include <vector>
#include <limits>
#include <iostream>
#include <map>
#include <cassert>
#include <stdexcept>

int main() {
    int len;
    std::cin >> len;
    std::vector<int> arr(len);
    for (int i = 0; i < len; ++i) {
        std::cin >> arr[i];
    }
    int ans=SwedishHeroes(arr);
    std::cout << ans << std::endl;
    return 0;
}
